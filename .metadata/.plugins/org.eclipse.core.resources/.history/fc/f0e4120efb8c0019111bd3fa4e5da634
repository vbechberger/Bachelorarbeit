package genetic;

import java.util.ArrayList;

public class Simulation {
	  private CrossoverType type;
	  private Chromosome kid1;
	  private Chromosome kid2;
	  private Chromosome parent1;
	  private Chromosome parent2;

	
	public void start() {
		 
		  
		   if (type == CrossoverType.ORDERBASED) {
			   private ArrayList<Integer> indices = new ArrayList<Integer>();
			   Crossover crossover = new CrossoverOBX(type, parent1, parent2, indices);
		  } else if (type == CrossoverType.POSITIONBASED) {
			 // doPositionBased();
		  } else if (type == CrossoverType.PARTIALLYMAPPED) {
			  if (startIndex == -1) {
				  throw new IllegalStateException("The start index is not set!");
			  }
			  if (endIndex == -1) {
				  throw new IllegalStateException("The end index is not set!");
			  }
			  kid1 = doPartiallyMapped(parent1, parent2);
			  kid2 = doPartiallyMapped(parent2, parent1);		  
		  } else if (type == CrossoverType.CYCLE) {
			  //doCycle();  
		  } else {
			 //other types 
		  }
		   //make children's chromosomes

	}
}
