package genetic;

import util.SaveCopy;

public class Chromosome implements Comparable<Chromosome>{

	// parameters

	private double fitness;
	private int[] genes;

	public Chromosome(Instance instance) {
		genes = new int[instance.getTour().size()];
		SaveCopy.copy(genes, instance.getTour());
		calculateFitness();

	}

	public Chromosome(int[] numbers) {
		genes = new int[numbers.length];
		SaveCopy.copy(genes, numbers);
		calculateFitness();

	}

	double calculateFitness() {
		System.out.println("calculate Fitness is to implement!");
		return 0;
	}

	public double getFitness() {
		return fitness;
	}

	public int[] getGenes() {
		return genes;
	}

	/**
	 * Compares two chromosomes according to their fitness value.
	 * The chromosome with the greater fitness value 
	 * is greater than the other one with the smaller fitness value.
	 */
	@Override
	public int compareTo(Chromosome o) {
		
		if (this.getFitness() > o.getFitness()) {
			return 1;			
		} else if (this.getFitness() < o.getFitness()) {
			return -1;
		} else {
			return 0;
		}		
	}

}
